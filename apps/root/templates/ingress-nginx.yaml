apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ingress-nginx
  namespace: argo-cd
spec:
  generators:
    - list:
        elements:
          - scope: public
            http: "80"
            https: "443"
            admissionWebhooks: "8443"
            defaultServer: "8181"
            status: "10246"
            stream: "10247"
            healthz: "10254"
            profiler: "10245"
            sslPassthroughProxy: "442"
          - scope: tailnet
            http: "10080"
            https: "10443"
            admissionWebhooks: "18443"
            defaultServer: "18181"
            status: "11246"
            stream: "11247"
            healthz: "11254"
            profiler: "11245"
            sslPassthroughProxy: "10442"
  template:
    metadata:
      name: "ingress-nginx-{{ `{{ scope }}` }}"
      namespace: argo-cd
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: default
      source:
        chart: ingress-nginx
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: "4.12.*"
        helm:
          releaseName: "ingress-nginx-{{ `{{ scope }}` }}"
          valuesObject:
            controller:
              kind: DaemonSet
              hostNetwork: true
              extraArgs:
                http-port: "{{ `{{ http }}` }}"
                https-port: "{{ `{{ https }}` }}"
                default-server-port: "{{ `{{ defaultServer }}` }}"
                status-port: "{{ `{{ status }}` }}"
                stream-port: "{{ `{{ stream }}` }}"
                healthz-port: "{{ `{{ healthz }}` }}"
                profiler-port: "{{ `{{ profiler }}` }}"
                ssl-passthrough-proxy-port: "{{ `{{ sslPassthroughProxy }}` }}"
              containerPort:
                http: "{{ `{{ http }}` }}"
                https: "{{ `{{ https }}` }}"
              service:
                type: ClusterIP
                ports:
                  http: "{{ `{{ http }}` }}"
                  https: "{{ `{{ https }}` }}"
              admissionWebhooks:
                enabled: true
                port: "{{ `{{ admissionWebhooks }}` }}"
              ingressClassResource:
                name: "nginx-{{ `{{ scope }}` }}"
                controllerValue: "k8s.io/nginx-{{ `{{ scope }}` }}"
              ingressClass: "nginx-{{ `{{ scope }}` }}"
              nodeSelector:
                node-role.kubernetes.io/control-plane: "true"
      destination:
        server: "{{ .Values.destination.server }}"
        namespace: "ingress-nginx-{{ `{{ scope }}` }}"
      syncPolicy:
        automated:
          prune: true
          allowEmpty: false
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
