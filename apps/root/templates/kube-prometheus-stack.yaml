apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: "78.*"
    helm:
      releaseName: kube-prometheus-stack
      values: |
        {{- tpl (.Files.Get "config/kube-prometheus-stack.yaml") . | nindent 8 }}
  destination:
    server: "{{ .Values.destination.server }}"
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      allowEmpty: false
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
  ignoreDifferences:
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      jqPathExpressions:
        - .webhooks[].clientConfig.caBundle
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      jqPathExpressions:
        - .webhooks[].clientConfig.caBundle
    - group: apps
      kind: DaemonSet
      name: kube-prometheus-stack-prometheus-node-exporter
      jqPathExpressions:
        - .spec.template.spec.containers[].resources
    - group: apps
      kind: Deployment
      name: kube-prometheus-stack-grafana
      jqPathExpressions:
        - .spec.template.spec.containers[].resources
