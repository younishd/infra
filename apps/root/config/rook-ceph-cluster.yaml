operatorNamespace: rook-ceph
clusterName: clusterfuck

toolbox:
  enabled: true

cephClusterSpec:
  dataDirHostPath: /var/lib/rook
  mon:
    count: 3
  mgr:
    count: 2
  dashboard:
    enabled: true
    ssl: false
  placement:
    all:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/ceph"
                operator: In
                values:
                - "true"
  storage:
    useAllNodes: true
    useAllDevices: false
    nodes:
      - name: "frozen-river"
        devices:
          - name: "sdb"
          - name: "sdc"
          - name: "sdd"
      - name: "savanna-plateau"
        devices:
          - name: "sdb"
          - name: "sdc"
          - name: "sdd"
      - name: "windswept-hills"
        devices:
          - name: "sdb"
          - name: "sdc"
          - name: "sdd"

ingress:
  dashboard:
    annotations:
      cert-manager.io/cluster-issuer: {{ .Values.ingress.clusterIssuer.tailnet }}
    host:
      name: "ceph.tail.{{ .Values.ingress.baseDomain }}"
      path: "/ceph-dashboard(/|$)(.*)"
    tls:
    - hosts:
        - "ceph.tail.{{ .Values.ingress.baseDomain }}"
      secretName: ceph-dashboard-tls
    ingressClassName: nginx-tailnet

cephBlockPools:
  - name: clusterfuck-block
    spec:
      failureDomain: host
      replicated:
        size: 3
    storageClass:
      enabled: true
      name: ceph-block
      isDefault: true
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      volumeBindingMode: "Immediate"

cephObjectStores:
  - name: clusterfuck-object
    spec:
      metadataPool:
        failureDomain: host
        replicated:
          size: 3
      dataPool:
        failureDomain: host
        erasureCoded:
          dataChunks: 2
          codingChunks: 2
      preservePoolsOnDelete: false
    storageClass:
      enabled: true
      name: ceph-bucket
      reclaimPolicy: Delete
      volumeBindingMode: "Immediate"
