image:
  repository: ghcr.io/mastodon/mastodon
  tag: edge
  pullPolicy: Always

mastodon:
  createAdmin:
    enabled: true
    username: olaf
    email: olaf@example.com
  local_domain: "mastodon.{{ .Values.spec.baseDomain }}"
  secrets:
    existingSecret: "mastodon-secrets"
  hooks:
    dbMigrate:
      enabled: false
  persistence:
    assets:
      storageClassName: local-path
    system:
      storageClassName: local-path
  web:
    affinity:
      podAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                    - rails
            topologyKey: kubernetes.io/hostname
  sidekiq:
    affinity:
      podAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                    - rails
            topologyKey: kubernetes.io/hostname
  smtp:
    auth_method: plain
    ca_file: /etc/ssl/certs/ca-certificates.crt
    delivery_method: smtp
    domain: "mastodon.{{ .Values.spec.baseDomain }}"
    enable_starttls: "auto"
    from_address: "noreply@mastodon.{{ .Values.spec.baseDomain }}"
    return_path:
    openssl_verify_mode: none
    port: 587
    reply_to:
    server: smtp.gmail.com
    tls: false
    existingSecret: mastodon-smtp

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.spec.clusterIssuer.public }}
    nginx.ingress.kubernetes.io/proxy-body-size: 40m
  ingressClassName: nginx-public
  hosts:
    - host: "mastodon.{{ .Values.spec.baseDomain }}"
      paths:
        - path: "/"
  tls:
    - secretName: mastodon-tls
      hosts:
        - "mastodon.{{ .Values.spec.baseDomain }}"

postgresql:
  enabled: true
  auth:
    database: mastodon_production
    username: mastodon
    existingSecret: "postgres-auth"

redis:
  enabled: true
  auth:
    existingSecret: "redis-auth"
  replica:
    replicaCount: 1

nodeSelector:
  node-role.kubernetes.io/data-plane: "true"
